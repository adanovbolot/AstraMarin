# Generated by Django 4.2 on 2023-05-31 18:36

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('userid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True, verbose_name='Логин')),
                ('full_name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Фамилия')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, unique=True, verbose_name='ИИН')),
                ('user_type', models.CharField(choices=[('Администрация', 'Администрация'), ('Оператор', 'Оператор'), ('Судоводитель', 'Судоводитель')], default=2, max_length=13, verbose_name='Должность')),
                ('is_active', models.BooleanField(default=False, verbose_name='Активный')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Админ')),
                ('password', models.CharField(editable=False, max_length=128, verbose_name='Пароль')),
                ('date_of_registration', models.DateTimeField(auto_now=True, null=True, verbose_name='Дата регистрации')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Последний вход')),
                ('last_logout', models.DateTimeField(blank=True, null=True, verbose_name='Последний выход')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Сотрудник',
                'verbose_name_plural': 'Сотрудники',
            },
        ),
        migrations.CreateModel(
            name='Berths',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('berths', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Причал')),
            ],
            options={
                'verbose_name': 'Причал',
                'verbose_name_plural': 'причал',
            },
        ),
        migrations.CreateModel(
            name='EvotorUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userId', models.CharField(max_length=100, verbose_name='UserID')),
                ('token', models.CharField(blank=True, max_length=250, null=True, verbose_name='Токен')),
            ],
            options={
                'verbose_name': 'Пользователи Эвотор',
                'verbose_name_plural': 'Пользователи Эвотор',
            },
        ),
        migrations.CreateModel(
            name='LandingPlaces',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('currently_working', models.BooleanField(blank=True, default=False, null=True, verbose_name='На данный момент работает')),
            ],
            options={
                'verbose_name': 'Посадочное место',
                'verbose_name_plural': 'Посадочные места',
                'ordering': ('address',),
            },
        ),
        migrations.CreateModel(
            name='PointsSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_data', models.DateField(default=datetime.date.today, verbose_name='Дата создания')),
                ('left_at', models.DateField(blank=True, null=True, verbose_name='Дата выхода')),
                ('complete_the_work_day', models.BooleanField(blank=True, default=False, null=True, verbose_name='Завершить рабочий день')),
                ('status', models.CharField(blank=True, choices=[('Открытая смена', 'Открытая смена'), ('Архив', 'Архив')], default='Открытая смена', max_length=14, null=True, verbose_name='Статус смены')),
                ('landing_places', models.ManyToManyField(to='server.landingplaces', verbose_name='Посадочное место')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Оператор')),
            ],
            options={
                'verbose_name': 'Точка продажи',
                'verbose_name_plural': 'Точки продажи',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, unique=True, verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Стоимость Билета',
                'verbose_name_plural': 'Стоимости Билетов',
                'ordering': ('price',),
            },
        ),
        migrations.CreateModel(
            name='PriceTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_type', models.CharField(choices=[('Ребенок', 'Ребенок'), ('Взрослый', 'Взрослый')], max_length=10, unique=True, verbose_name='Тип клиента')),
                ('price', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='server.price', verbose_name='Стоимость')),
            ],
            options={
                'verbose_name': 'Тип цен',
                'verbose_name_plural': 'Типы цен',
                'ordering': ('price',),
            },
        ),
        migrations.CreateModel(
            name='Ship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_name', models.CharField(max_length=100, unique=True, verbose_name='Название судна')),
                ('restrictions', models.PositiveIntegerField(blank=True, default=20, null=True, verbose_name='Ограничения билетов')),
            ],
            options={
                'verbose_name': 'Судно',
                'verbose_name_plural': 'Судно',
                'ordering': ('vessel_name',),
            },
        ),
        migrations.CreateModel(
            name='ShipSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField(verbose_name='Время начала')),
                ('end_time', models.TimeField(verbose_name='Время окончания')),
                ('berths', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='server.berths', verbose_name='Причал')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedules', to='server.ship', verbose_name='Судно')),
            ],
            options={
                'verbose_name': 'Время посадки',
                'verbose_name_plural': 'Время посадки',
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ticket_day', models.DateField(verbose_name='День билета')),
                ('adult_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество взрослых')),
                ('child_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Количество детей')),
                ('created_at', models.DateField(default=django.utils.timezone.now, verbose_name='Дата создания')),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=12, verbose_name='Общая сумма')),
                ('bought', models.BooleanField(blank=True, default=False, null=True, verbose_name='Купленный')),
                ('ticket_has_expired', models.BooleanField(blank=True, default=False, null=True, verbose_name='Время жизни билета прошло')),
                ('check_qr_text', models.ImageField(blank=True, null=True, upload_to='tickets/check/', verbose_name='Чек')),
                ('ticket_verified', models.BooleanField(blank=True, default=False, null=True, verbose_name='Билет проверен')),
                ('ticket_return', models.BooleanField(default=False, verbose_name='Возрат билета')),
                ('area', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='area_ticket', to='server.landingplaces', verbose_name='Площадка')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tickets_points_sale', to='server.pointssale', verbose_name='Оператор')),
                ('price_types', models.ManyToManyField(to='server.pricetypes', verbose_name='Типы цен')),
                ('ship', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ship_ticket', to='server.shipschedule', verbose_name='Судно')),
            ],
            options={
                'verbose_name': 'Билет',
                'verbose_name_plural': 'Билеты',
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='SalesReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_date', models.DateField(blank=True, null=True, verbose_name='Дата отчета')),
                ('sales_date', models.DateField(auto_now_add=True, null=True, verbose_name='Дата продаж')),
                ('total_adult_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Общее количество взрослых')),
                ('total_child_quantity', models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='Общее количество детей')),
                ('total_amount_report', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=12, null=True, verbose_name='Общая сумма продаж')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sales_reports', to='server.pointssale', verbose_name='Оператор')),
            ],
            options={
                'verbose_name': 'Отчет о продажах',
                'verbose_name_plural': 'Отчеты о продажах',
            },
        ),
    ]
